pipeline {
    agent any
    stages {
        stage('Initialize') {
            steps {
                script {
                    
                    env.BRANCH_NAME = (env.GIT_BRANCH ?: 'default-branch').replaceAll('origin/', '')
                    
                    env.BUILD_NUMBER = env.BUILD_NUMBER ?: '0'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Branch Name: ${env.BRANCH_NAME}"
                    echo "Build Number: ${env.BUILD_NUMBER}"

                    
                    sh "docker build -t my-app:${env.BRANCH_NAME}-${env.BUILD_NUMBER} build/."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_CREDENTIALS', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                       
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'

                       
                        def imageTag = "my-app:${env.BRANCH_NAME}-${env.BUILD_NUMBER}"

                       
                        if (env.BRANCH_NAME == 'dev') {
                            sh "docker tag ${imageTag} sanjaykumar2001/dev:latest"
                            sh "docker push sanjaykumar2001/dev:latest"
                        } else if (env.BRANCH_NAME == 'master') {
                            sh "docker tag ${imageTag} sanjaykumar2001/prod-repo:latest"
                            sh "docker push sanjaykumar2001/prod-repo:latest"
                        } else {
                            
                            echo "Branch ${env.BRANCH_NAME} is not configured for pushing to Docker Hub."
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
